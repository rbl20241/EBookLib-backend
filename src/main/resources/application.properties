spring.profiles.active=@activatedProperties@

spring.main.banner-mode=off
## prevent jackson to serialize localdate to an extensive definition
spring.jackson.serialization.write-dates-as-timestamps=false

### Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:postgresql://localhost:5432/ebooklib
#spring.datasource.username=rene
#spring.datasource.password=A1b2c3d*
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.jpa.database=POSTGRESQL
#spring.datasource.maxActive=10
#spring.datasource.maxIdle=5
#spring.datasource.minIdle=2
#spring.datasource.initialSize=5
#spring.datasource.removeAbandoned=true
#
#
## Properties to fix createClob exception https://stackoverflow.com/questions/49683434/spring-boot-app-fails-method-org-postgresql-jdbc4-jdbc4connection-createclob-i
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# spring.datasource.url=jdbc:mysql://localhost:3306/ebooklib?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT
spring.datasource.url=jdbc:mysql://localhost:3306/ebooklib?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT
spring.datasource.username=root
spring.datasource.password=A1b2c3d*
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
# spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=false

#show app logging
logging.level.rb.ebooklib=debug

#show sql statement
logging.level.org.hibernate.SQL=error
#show sql (parameter) values
###logging.level.org.hibernate.type.descriptor.sql=trace

server.port=8085

#actuator endpoints
management.endpoints.web.exposure.include=info, health, loggers, mappings

#access.control.allow.origin=*
access.control.allow.origin=http://localhost:4200


# Properties used by the google api. Key is generated with a google account
# google.api.key=AIzaSyDtcZrkuTvDy7Xal6p_5k8zIQFPL2ZFjIY
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=<username>
spring.mail.password=<password>>
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
google.api.key=AIzaSyD70hai7T3tzM-9623kKOmLYIZJ4etb9M0

# Properties for OAuth2 authorisation
# rb.ebooklib.oauth2.client_id=LibrarySharingApp
# rb.ebooklib.oauth2.client_pass=SuperSecretPassword

# Properties for OAuth2 authorisation
# nl.librarysharing.oauth2.client_id=LibrarySharingApp
# nl.librarysharing.oauth2.client_pass=SuperSecretPassword

# Properties for OAuth2 Basic authorisation
app.auth.tokenSecret= 926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec= 86400000
